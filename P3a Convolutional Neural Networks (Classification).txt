a.	Implementing deep neural network for performing binary classification task

#pip install tensorflow
# Colab only

from keras.models import Sequential
from keras.layers import Dense
import pandas as pd

names = [
    "No. of pregnancies",
    "Glucose level",
    "Blood Pressure",
    "skin thickness",
    "Insulin",
    "BMI",
    "Diabetes pedigree",
    "Age",
    "Class",
]

df = pd.read_csv("pima-indians-diabetes.data.csv", names=names)
df.head(3)


binaryc = Sequential()

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Input

binaryc = Sequential()
binaryc.add(Input(shape=(8,)))  # Instead of input_dim
binaryc.add(Dense(units=10, activation="relu"))
binaryc.add(Dense(units=8, activation="relu"))
binaryc.add(Dense(units=1, activation="sigmoid"))
binaryc.compile(loss="binary_crossentropy", optimizer="adam", metrics=["accuracy"])



X = df.iloc[:, :-1]
y = df.iloc[:, -1]

from sklearn.model_selection import train_test_split

xtrain, xtest, ytrain, ytest = train_test_split(X, y, test_size=0.25, random_state=1)
print(xtrain.shape)
print(ytrain.shape)
binaryc.fit(xtrain, ytrain, epochs=200, batch_size=20)
predictions = binaryc.predict(xtest)
print(predictions.shape)


class_labels = []
for i in predictions:
    if i > 0.5:
        class_labels.append(1)
    else:
        class_labels.append(0)
class_labels
from sklearn.metrics import accuracy_score

print("Accuracy Score", accuracy_score(ytest, class_labels))
