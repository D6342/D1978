import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix, accuracy_score

Tweets_data = pd.read_csv("Tweets.csv")
print("Reading Data Set : \n", Tweets_data.head(2), Tweets_data.shape)

pie_plot1 = Tweets_data.airline.value_counts()
pie_plot1.plot(kind="pie", autopct="%2.1f%%")
print("\n", pie_plot1.head(2))
plt.show()

pie_plot2 = Tweets_data.airline_sentiment.value_counts()
pie_plot2.plot(kind="pie", autopct="%2.1f%%")
print("\n", pie_plot2.head(2))
plt.show()

airline_sentiment = Tweets_data.groupby(['airline', 'airline_sentiment']).airline_sentiment.count().unstack()
airline_sentiment.plot(kind="bar")
print("\n", airline_sentiment.head(2))
plt.show()

sns.barplot(x="airline_sentiment", y="airline_sentiment_confidence", data=Tweets_data, width=0.2)
plt.show()

train = Tweets_data.iloc[:, 10]
print("\nTrain Data :\n", train.head(2))
test = Tweets_data.iloc[:, 1]
print("\nTest Data :\n", test.head(2))

train.replace(r"[^a-zA-Z]", " ", regex=True, inplace=True)
print("\nAll special character is replaced with ' ':\n", train.head(2))
processed_data = train.str.lower()
print("\nAll words are converted into lower case:\n", processed_data.head(2))

vectorizer = TfidfVectorizer(max_features=2500, min_df=7, max_df=0.8, stop_words=stopwords.words("english"))
processed_features = vectorizer.fit_transform(processed_data)

x_train, x_test, y_train, y_test = train_test_split(processed_features, test, test_size=0.2, random_state=0)

text_classifier = RandomForestClassifier(n_estimators=200, random_state=0)
text_classifier.fit(x_train, y_train)
predictions = text_classifier.predict(x_test)

print("\nAccuracy Score:", accuracy_score(y_test, predictions))
